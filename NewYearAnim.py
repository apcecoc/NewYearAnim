__version__ = (1, 0, 0)

#             ‚ñà ‚ñà ‚ñÄ ‚ñà‚ñÑ‚ñÄ ‚ñÑ‚ñÄ‚ñà ‚ñà‚ñÄ‚ñà ‚ñÄ
#             ‚ñà‚ñÄ‚ñà ‚ñà ‚ñà ‚ñà ‚ñà‚ñÄ‚ñà ‚ñà‚ñÄ‚ñÑ ‚ñà
#              ¬© Copyright 2024
#           https://t.me/apcecoc
#
# üîí      Licensed under the GNU AGPLv3
# üåê https://www.gnu.org/licenses/agpl-3.0.html
# meta developer: @apcecoc
# scope: hikka_only
# scope: hikka_min 1.2.10
from .. import loader, utils
from telethon.tl.types import Message
from asyncio import sleep
import random

@loader.tds
class NewYearAnimMod(loader.Module):
    """–ù–æ–≤–æ–≥–æ–¥–Ω—è—è –∞–Ω–∏–º–∞—Ü–∏—è —á–µ—Ä–µ–∑ inline"""
    strings = {'name': 'NewYearAnim'}
    
    async def nyacmd(self, message: Message):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –Ω–æ–≤–æ–≥–æ–¥–Ω—é—é –∞–Ω–∏–º–∞—Ü–∏—é"""
        
        frames = [
            "üéÑ\n\n",
            "   ‚≠êÔ∏è\n  üéÑ\n\n", 
            "   ‚≠êÔ∏è\n  üéÑüéÅ\n\n",
            "   ‚≠êÔ∏è\n üéÅüéÑüéÅ\n\n",
            "   ‚≠êÔ∏è\nüéÅüéÑüéÅüéÅ\n\n",
            "   ‚≠êÔ∏è\nüéÅüéÑüéÅüéÅ\n‚ùÑÔ∏è  ‚ùÑÔ∏è  ‚ùÑÔ∏è\n",
            "   ‚≠êÔ∏è\nüéÅüéÑüéÅüéÅ\n‚ùÑÔ∏è üéÖ ‚ùÑÔ∏è\n",
            "   ‚≠êÔ∏è\nüéÅüéÑüéÅüéÅ\n‚ùÑÔ∏èüéÖ‚ùÑÔ∏è\nüéÅ üéÅ üéÅ\n",
            "‚ú®  ‚≠êÔ∏è  ‚ú®\nüéÅüéÑüéÅüéÅ\n‚ùÑÔ∏èüéÖ‚ùÑÔ∏è\nüéÅ üéÅ üéÅ\n",
            "‚ú®  ‚≠êÔ∏è  ‚ú®\nüéÅüéÑüéÅüéÅ\n‚ùÑÔ∏èüéÖ‚ùÑÔ∏è\nüéÅ üéÅ üéÅ\n\n‚ùÑÔ∏è –° –ù–æ–≤—ã–º –ì–æ–¥–æ–º! ‚ùÑÔ∏è"
        ]

        # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
        async def create_animation():
            return await self.inline.form(
                message=message,
                text=frames[0],
                reply_markup={"text": "üéÑ –ó–∞–ø—É—Å—Ç–∏—Ç—å –∞–Ω–∏–º–∞—Ü–∏—é", "callback": self.animate},
                silent=True,
                ttl=1200,
            )

        await create_animation()

    async def animate(self, call):
        """Callback –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏"""
        frames = [
            "üéÑ\n\n",
            "   ‚≠êÔ∏è\n  üéÑ\n\n", 
            "   ‚≠êÔ∏è\n  üéÑüéÅ\n\n",
            "   ‚≠êÔ∏è\n üéÅüéÑüéÅ\n\n",
            "   ‚≠êÔ∏è\nüéÅüéÑüéÅüéÅ\n\n",
            "   ‚≠êÔ∏è\nüéÅüéÑüéÅüéÅ\n‚ùÑÔ∏è  ‚ùÑÔ∏è  ‚ùÑÔ∏è\n",
            "   ‚≠êÔ∏è\nüéÅüéÑüéÅüéÅ\n‚ùÑÔ∏è üéÖ ‚ùÑÔ∏è\n",
            "   ‚≠êÔ∏è\nüéÅüéÑüéÅüéÅ\n‚ùÑÔ∏èüéÖ‚ùÑÔ∏è\nüéÅ üéÅ üéÅ\n",
            "‚ú®  ‚≠êÔ∏è  ‚ú®\nüéÅüéÑüéÅüéÅ\n‚ùÑÔ∏èüéÖ‚ùÑÔ∏è\nüéÅ üéÅ üéÅ\n",
            "‚ú®  ‚≠êÔ∏è  ‚ú®\nüéÅüéÑüéÅüéÅ\n‚ùÑÔ∏èüéÖ‚ùÑÔ∏è\nüéÅ üéÅ üéÅ\n\n‚ùÑÔ∏è –° –ù–æ–≤—ã–º –ì–æ–¥–æ–º! ‚ùÑÔ∏è"
        ]

        # –ê–Ω–∏–º–∞—Ü–∏—è —á–µ—Ä–µ–∑ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
        for frame in frames:
            await call.edit(
                text=frame,
                reply_markup={"text": "üéÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å", "callback": self.animate},
            )
            await sleep(0.8)

        # –ü–∞–¥–∞—é—â–∏–π —Å–Ω–µ–≥ –≤ –∫–æ–Ω—Ü–µ
        final = frames[-1]
        for _ in range(5):
            snow = ""
            for _ in range(3):
                snow += "‚ùÑÔ∏è" if random.random() > 0.5 else "‚ú®"
            await call.edit(
                text=final + "\n" + snow,
                reply_markup={"text": "üéÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å", "callback": self.animate},
            )
            await sleep(0.5)